name: Windows OS Credential Dumping with Ntdsutil Export NTDS
id: dad9ddec-a72a-47be-87b6-a0f7ba98ed6e
version: 1
description: 'Monitor for signs that Ntdsutil is being used to Extract Active Directory
  database - NTDS.dit, typically used for offline password cracking. It may be used
  in normal circumstances with no command line arguments or shorthand variations of
  more common arguments. Ntdsutil.exe is typically seen run on a Windows Server. Typical
  command used to dump ntds.dit \

  ntdsutil "ac i ntds" "ifm" "create full C:\Temp" q q \

  This technique uses "Install from Media" (IFM), which will extract a copy of the
  Active Directory database. A successful export of the Active Directory database
  will yield a file modification named ntds.dit to the destination.'
search: '| from read_ssa_enriched_events() | eval timestamp=parse_long(ucast(map_get(input_event,
  "_time"), "string", null)), cmd_line=lower(ucast(map_get(input_event, "process"),
  "string", null)), process_name=lower(ucast(map_get(input_event, "process_name"),
  "string", null)), process_path=ucast(map_get(input_event, "process_path"), "string",
  null), parent_process_name=ucast(map_get(input_event, "parent_process_name"), "string",
  null), event_id=ucast(map_get(input_event, "event_id"), "string", null) | where
  cmd_line IS NOT NULL AND process_name IS NOT NULL AND process_name="ntdsutil.exe"
  AND (like (cmd_line, "%ntds%") AND like (cmd_line, "%create%")) | eval start_time=timestamp,
  end_time=timestamp, entities=mvappend(ucast(map_get(input_event, "dest_user_id"),
  "string", null), ucast(map_get(input_event, "dest_device_id"), "string", null)),
  body=create_map(["event_id", event_id, "cmd_line", cmd_line, "process_name", process_name,
  "parent_process_name", parent_process_name, "process_path", process_path]) | into
  write_ssa_detected_events();'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, parent process, and command-line executions from your
  endpoints. If you are using Sysmon, you must have at least version 6.0.4 of the
  Sysmon TA.
known_false_positives: Highly possible Server Administrators will troubleshoot with
  ntdsutil.exe, generating false positives.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.003/T1003.003.md#atomic-test-3---dump-active-directory-database-with-ntdsutil
- https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc753343(v=ws.11)
- https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf
- https://strontic.github.io/xcyclopedia/library/vss_ps.dll-97B15BDAE9777F454C9A6BA25E938DB3.html
tags:
  analytic_story:
  - Credential Dumping
  - HAFNIUM Group
  - Living Off The Land
  cis20: []
  kill_chain_phases:
  - Exploitation
  mitre_attack_id:
  - T1003.003
  - T1003
  nist: []
  required_fields:
  - _time
  - dest_device_id
  - process_name
  - parent_process_name
  - process_path
  - dest_user_id
  - process
  - cmd_line
  risk_score: 50
  security_domain: endpoint
  risk_severity: medium
  research_site_url: https://research.splunk.com/endpoint/dad9ddec-a72a-47be-87b6-a0f7ba98ed6e/
  event_schema: cim
test:
  name: Windows OS Credential Dumping with Ntdsutil Export NTDS Unit Test
  tests:
  - name: Windows OS Credential Dumping with Ntdsutil Export NTDS
    file: endpoint/ssa___windows_os_credential_dumping_with_ntdsutil_export_ntds.yml
    pass_condition: '@count_gt(0)'
    attack_data:
    - file_name: 4688_windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.003/atomic_red_team/4688_windows-security.log
      source: XmlWinEventLog
